FEASIBILITY  ANALYSIS	
Once the need for the system and its business requirements have been defined, it is time to create a more detailed business case to better understand the opportunities and limitations associated with the proposed project. Feasibility analysis guides the organization in determin- ing whether or not to proceed with a project. Feasibility analysis also identifies the important risks associated with the project that must be addressed if the project is approved. As with the system request, each organization has its own process and format for the feasibility analysis, but most include three types: technical feasibility, economic feasibility, and organizational feasibility. The results of these analyses are combined into a feasibility study, which is given to the approval committee (see Figure 2-2).
Although we now discuss feasibility analysis within the context of initiating a project, most project teams will revise their feasibility study throughout the development process and revisit its contents at various checkpoints during the project. If at any point the project’s risks and limitations outweigh its benefits, the project team may decide to cancel the project or make necessary improvements.
Technical Feasibility
The first type of feasibility analysis addresses the technical feasibility of the project: the extent to which the system can be successfully designed, developed, and installed by the IT group.

Technical feasibility analysis is in essence a technical risk analysis that strives to answer this question: Can we build it?2
Many risks can endanger the successful completion of a project. First is the users’ and analysts’ lack of familiarity with the functional area. When analysts are unfamiliar with the business functional area, they have a greater chance of misunderstanding the users or of missing opportunities for improvement. The risk increases dramatically when the users themselves are less familiar with an application, such as with the development of a system to support a business innovation. In general, developing new systems is riskier than producing extensions to an existing system because existing systems tend to be better understood.
Familiarity with the technology is another important source of technical risk. When a system uses technology that has not been used before within the organization, there is a greater chance that problems will occur and delays will be incurred because of the need to learn how to use the technology. Risk increases dramatically when the technology itself is new.
Project size is an important consideration, whether measured as the number of people on the development team, the length of time it will take to complete the project, or the number of distinct features in the system. Larger projects present more risk, both because they are more complicated to manage and because there is a greater chance that important system require- ments will be overlooked or misunderstood. Furthermore, the extent to which the project is highly integrated with other systems can cause problems because complexity increases when many systems must work together.
Finally, project teams need to consider the compatibility of the new system with the technology that already exists in the organization. Systems are rarely built in a vacuum—they are built in organizations that already have numerous systems in place. New technology and applications need to integrate with the existing environment for many reasons. They might rely on data from existing systems, they might produce data that feed other applications, and they might have to use the company’s existing communications infrastructure.
The assessment of a project’s technical feasibility is not cut and dried because in many cases, some interpretation of the underlying conditions is needed. One approach is to com- pare the project under consideration with prior projects undertaken by the organization. Another option is to consult with experienced IT professionals in the organization or exter- nal IT consultants; often they are able to judge whether a project is feasible from a technical perspective.

Economic Feasibility
The second element of a feasibility analysis is to perform an economic feasibility analy- sis (also called a cost–benefit analysis), which identifies the financial risk associated with the project. It attempts to answer the question, Should we build the system? Economic feasibility is determined by identifying costs and benefits associated with the system, assign- ing values to them, and then calculating the cash flow and return on investment for the project. The more expensive the project, the more rigorous and detailed the analysis should be. Figure 2-3 lists the steps in performing a cost–benefit analysis; each step is described in the following sections.


2 We use build it in the broadest sense. Organizations can also choose to buy a commercial software package and install it, in which case, the question might be, Can we select the right package and successfully install it?
 
Identifying Costs and Benefits The first task when developing an economic feasibility anal- ysis is to identify the kinds of costs and benefits the system will have and list them along the left-hand column of a spreadsheet. Figure 2-4 lists examples of costs and benefits that may be included.

